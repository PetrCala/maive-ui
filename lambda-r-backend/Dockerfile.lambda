# ─────────────────────────────────────────────────────────
# APP IMAGE — tiny, reusing pre-baked R library base
# ─────────────────────────────────────────────────────────

# 1) Start the private base
FROM <acct>.dkr.ecr.eu-central-1.amazonaws.com/rlib:al2023-r4.4.1-maive AS base

# 2) Switch into a Lambda base (to get the Lambda runtime contract)
FROM public.ecr.aws/lambda/provided:al2023

# Bring in the pre-baked R from the base image
COPY --from=base /usr/local /usr/local
COPY --from=base /opt/rlib-manifest.txt /opt/rlib-manifest.txt
ENV PATH="/usr/local/bin:${PATH}"

# Lambda Web Adapter (extension)
COPY --from=public.ecr.aws/awsguru/aws-lambda-adapter:0.9.1 /lambda-adapter /opt/extensions/lambda-adapter

# App code
WORKDIR ${LAMBDA_TASK_ROOT}
COPY r_scripts/index.R .
COPY r_scripts/maive_model.R .
COPY r_scripts/funnel_plot.R .

# Adapter / server settings
ENV PORT=8787
ENV AWS_LWA_PORT=8787
ENV AWS_LWA_READINESS_CHECK_PROTOCOL=http
ENV AWS_LWA_READINESS_CHECK_PATH=/health
ENV AWS_LWA_ENABLE_COMPRESSION=true
# (Enable streaming ONLY with Function URL)
# ENV AWS_LWA_INVOKE_MODE=response_stream

# Start Plumber (adapter proxies requests)
ENTRYPOINT [ "R", "-q", "-e", "pr <- plumber::plumb('index.R'); pr$run(host='0.0.0.0', port=as.numeric(Sys.getenv('PORT','8787')))" ]
