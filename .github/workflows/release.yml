name: Release

on:
  pull_request:
    types: [closed]
    branches: [release]

permissions:
  id-token: write
  contents: read
  pull-requests: write # to post plan as comment

env:
  TF_VERSION: 1.12.0
  PROJECT_NAME: maive

jobs:
  build:
    strategy:
      matrix:
        service: [react-ui, flask-api, r-plumber]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-terraform
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image tag
        id: image-tag
        run: |
          echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build & push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ./apps/${{ matrix.service }}
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}-${{ matrix.service }}:${{ steps.image-tag.outputs.IMAGE_TAG }}

  plan:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      # run: { working-directory: infra/envs/prod }   # dev â†’ point to dev dir
      run: { working-directory: terraform/stacks/prod-runtime }
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-terraform
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set image tag
        id: image-tag
        run: |
          echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init \
          -backend-config="bucket=${{ env.PROJECT_NAME }}-tf-state" \
          -backend-config="key=prod-runtime.tfstate" \
          -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Terraform Plan
        run: terraform plan -input=false \
          -var="aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" \
          -var="image_tag=${{ steps.image-tag.outputs.IMAGE_TAG }}" \
          -out=plan.out

      - name: Terraform Apply
        if: github.ref == 'refs/heads/release'
        run: terraform apply -input=false -auto-approve plan.out
