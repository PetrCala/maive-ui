name: Lint PR Commit Messages

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-commits:
    name: Lint Commits
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures full commit history is available

      - name: Lint commit messages in PR
        run: |
          #!/bin/bash
          set -e

          BASE_REF="${{ github.event.pull_request.base.sha }}"
          HEAD_REF="${{ github.event.pull_request.head.sha }}"

          echo "üîÅ Comparing commits between $BASE_REF and $HEAD_REF"
          COMMITS=$(git log --format="%H" "$BASE_REF".."$HEAD_REF")

          PREFIXES="build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test"
          PATTERN="^($PREFIXES): .+"
          MAX_LENGTH=100

          for COMMIT in $COMMITS; do
            COMMIT_MSG=$(git log -1 --pretty=format:"%s" "$COMMIT")
            echo "üîç Checking: $COMMIT_MSG"

            if ! echo "$COMMIT_MSG" | grep -Eq "$PATTERN"; then
              echo ""
              echo "‚ùå Invalid commit message format in commit $COMMIT"
              echo "   '$COMMIT_MSG'"
              echo ""
              echo "‚úÖ Use the Conventional Commit format:"
              echo "   <type>: <description>"
              echo "üîß Allowed types: $PREFIXES"
              exit 1
            fi

            if [ ${#COMMIT_MSG} -gt $MAX_LENGTH ]; then
              echo ""
              echo "‚ùå Commit message is too long in commit $COMMIT"
              echo "   Length: ${#COMMIT_MSG} (max allowed is $MAX_LENGTH)"
              exit 1
            fi
          done

          echo "‚úÖ All commit messages in the PR are valid!"
